{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","event","this","setState","target","id","value","htmlFor","placeholder","autoComplete","required","onKeyUp","writeData","type","disabled","onClick","preventDefault","props","handler","document","querySelectorAll","forEach","element","input","Component","App","moviesFromServer","addMovie","current","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a2e8d749.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {};\n\n  writeData(event) {\n    this.setState({\n      [event.target.id]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"form\">\n        <label\n          htmlFor=\"title\"\n          className=\"form__label\"\n        >\n          <h3 className=\"form__heading\">Movie title</h3>\n          <input\n            id=\"title\"\n            className=\"form__input\"\n            placeholder=\"Enter new movie title\"\n            autoComplete=\"off\"\n            required\n            onKeyUp={(event) => {\n              this.writeData(event);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"description\"\n          className=\"form__label\"\n        >\n          <h3 className=\"form__heading\">Movie description</h3>\n          <input\n            id=\"description\"\n            className=\"form__input\"\n            placeholder=\"Enter new movie description\"\n            autoComplete=\"off\"\n            required\n            onKeyUp={(event) => {\n              this.writeData(event);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"imgUrl\"\n          className=\"form__label\"\n        >\n          <h3 className=\"form__heading\">Movie image link</h3>\n          <input\n            id=\"imgUrl\"\n            className=\"form__input\"\n            placeholder=\"Enter new movie image link\"\n            autoComplete=\"off\"\n            required\n            onKeyUp={(event) => {\n              this.writeData(event);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"imdbUrl\"\n          className=\"form__label\"\n        >\n          <h3 className=\"form__heading\">Movie IMBD link</h3>\n          <input\n            id=\"imdbUrl\"\n            className=\"form__input\"\n            placeholder=\"Enter new movie IMBD link\"\n            autoComplete=\"off\"\n            required\n            onKeyUp={(event) => {\n              this.writeData(event);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"imdbId\"\n          className=\"form__label\"\n        >\n          <h3 className=\"form__heading\">Movie IMBD id</h3>\n          <input\n            id=\"imdbId\"\n            className=\"form__input\"\n            placeholder=\"Enter new movie IMBD id\"\n            autoComplete=\"off\"\n            required\n            onKeyUp={(event) => {\n              this.writeData(event);\n            }}\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"form__addmovie\"\n          disabled={!this.state.title\n          || !this.state.description\n          || !this.state.imgUrl\n          || !this.state.imdbUrl\n          || !this.state.imdbId}\n          onClick={(event) => {\n            event.preventDefault();\n\n            this.props.handler(this.state);\n\n            document.querySelectorAll('.form__input').forEach((element) => {\n              const input = element;\n\n              input.value = '';\n              this.setState({ [input.id]: '' });\n            });\n          }}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  handler: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(current => (\n      {\n        movies: [...current.movies, movie],\n      }\n    ));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie handler={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}